#!/bin/bash

# Script de configuraci√≥n SSH para despliegue con GitHub Actions
# Este script te ayudar√° a configurar la autenticaci√≥n por clave SSH

echo "üîë Configurando autenticaci√≥n SSH para GitHub Actions..."
echo ""

# Datos del VPS
VPS_IP="5.161.196.136"
VPS_USER="root"
VPS_PORT="22"

echo "Datos del VPS:"
echo "IP: $VPS_IP"
echo "Usuario: $VPS_USER"
echo "Puerto: $VPS_PORT"
echo ""

# Clave p√∫blica para agregar a authorized_keys
PUBLIC_KEY="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJyJdmXgFaU9PG2m3MuABWQcaUJy81jOYeX/sz3HAMDe GitHub Actions"

echo "üìã Clave p√∫blica para agregar:"
echo "$PUBLIC_KEY"
echo ""

echo "üîß Instrucciones para configurar autenticaci√≥n SSH:"
echo ""
echo "Como no tienes contrase√±a para el VPS, tienes dos opciones:"
echo ""
echo "Opci√≥n 1: Si tienes acceso SSH por otros medios (como agente SSH u otra clave):"
echo "  ssh root@$VPS_IP 'echo \"$PUBLIC_KEY\" >> ~/.ssh/authorized_keys'"
echo ""
echo "Opci√≥n 2: Si puedes acceder a la consola del VPS directamente (v√≠a panel del proveedor):"
echo "  1. Entra a la consola de tu VPS"
echo "  2. Ejecuta estos comandos:"
echo "     mkdir -p ~/.ssh"
echo "     chmod 700 ~/.ssh"
echo "     echo \"$PUBLIC_KEY\" >> ~/.ssh/authorized_keys"
echo "     chmod 600 ~/.ssh/authorized_keys"
echo ""
echo "Opci√≥n 3: Si tienes acceso temporal con contrase√±a:"
echo "  ssh-copy-id -i ~/.ssh/id_ed25519.pub root@$VPS_IP"
echo ""

echo "‚úÖ Despu√©s de agregar la clave p√∫blica a tu VPS:"
echo "1. Ve a tu repositorio de GitHub"
echo "2. Settings > Secrets and variables > Actions"
echo "3. Agrega nuevo secreto llamado 'SSH_KEY'"
echo "4. Pega la clave PRIVADA (no la p√∫blica)"
echo "5. Aseg√∫rate de que todos los secretos est√©n configurados:"
echo "   - HOST: 5.161.196.136"
echo "   - USERNAME: root"
echo "   - SSH_KEY: (contenido de la clave privada)"
echo "   - PORT: 22"
echo ""

echo "üöÄ ¬°Entonces puedes probar el despliegue subiendo a la rama main!"
echo ""

# Funci√≥n para probar conexi√≥n SSH
test_ssh_connection() {
    echo "üîç Probando conexi√≥n SSH..."
    if ssh -o ConnectTimeout=10 -o BatchMode=yes root@$VPS_IP "echo 'Conexi√≥n SSH exitosa'" 2>/dev/null; then
        echo "‚úÖ ¬°Prueba de conexi√≥n SSH exitosa!"
        return 0
    else
        echo "‚ùå La prueba de conexi√≥n SSH fall√≥. Por favor completa la configuraci√≥n anterior."
        return 1
    fi
}

# Descomenta la siguiente l√≠nea para probar conexi√≥n SSH despu√©s de la configuraci√≥n
# test_ssh_connection